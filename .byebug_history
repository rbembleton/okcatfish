exit
UserResponse.all
@user_responses
c
s
self.user_id
s
self
s
self
exit
n
c
s
exit
n
c
exit
c
user2
user1
exit
most_recent
this_time
c
this_time > most_recent
most_recent
this_time
c
@threads
c
@threads
exit
c
message_thread.most_recent_message.body
message_thread.most_recent_message
message_thread
exit
thread
c
q
quite
exit
step
@threads
c
MessageThread.find(13)
MessageThread.all
self
c
self
c
self.updated_at
c
self.updated_at
exit
@threads
exit
c
self.updated_at
c
self.updated_at
exit
message_params[:thread_id]
message_params[:thread_id
q
c
exit
(JSON.parse response.body)
(JSON.parse response.body)["results"]
response["results"]
response
exit
body_json
c
zip
q
@user.errors.full_messages
@user.errors
c
@user.errors
exit
@user.errors
@user.errors.delete([:lat,:lng,:loc_desc])
@user
exit
@user.errors.full_messages
@user.errors.
@user.errors.delete(:loc_desc)
@user.errors.delete(:lng)
@user.errors.delete(:lat)
@user.errors.allow(:birthdate)
@user.errors.remove(:lng)
@user.errors
c
@user
c
q
exit
search_params
exit
search_params
exit
    params.require(:search).permit(:distance) + params.require(:search).require(:location).permit(:lat, :lng)
    params.require(:search).require(:location).permit(:lat, :lng)
params.require(:search).permit(:distance) +
params.require(:search).require(:location).permit(:lat, :lng)
params.require(:search).permit(:distance)
exit
search_params
exit
search_params
exit
search_params
exit
params
search_params
exit
content
contents
exit
body_json["address_components"]
body_json[
addy_lnth
add_lnth
exit
JSON.parse(response.body)["results"][0]["geometry"]["location"]["lat"]
JSON.parse(response.body)["results"][0]["geometry"]["location"]
JSON.parse(response.body)["results"][0]["geometry"]
JSON.parse(response.body)["results"][0]
JSON.parse(response.body)["results"][1]
JSON.parse(response.body)["results"][0]["address_components"][4]["short_name"]
JSON.parse(response.body)["results"][0]["address_components"][1]["short_name"]
JSON.parse(response.body)["results"][0]["address_components"][1][:short_name]
JSON.parse(response.body)["results"][0]["address_components"][1]
JSON.parse(response.body)["results"][0]["address_components"][0]
JSON.parse(response.body)["results"][0]["address_components"]
JSON.parse(response.body)["results"]["address_components"]
JSON.parse(response.body)["results"]
JSON.parse(response.body)[results]
JSON.parse(response.body)
JSON.parse response.body
JSON.parse
JSON
response.body.to_json
response.body
RestClient::Response.fix_encoding(response).body.to_json[postal_code]
RestClient::Response.fix_encoding(response).body.to_json["\"]
RestClient::Response.fix_encoding(response).body.to_json
RestClient::Response.fix_encoding(response).body.to_a
RestClient::Response.fix_encoding(response).body.to_h
RestClient::Response.fix_encoding(response).body.to_hash
RestClient::Response.fix_encoding(response).body.to_json
RestClient::Response.fix_encoding(response).body.to_JSON
RestClient::Response.fix_encoding(response).body
RestClient::Response.fix_encoding(response)
RestClient::Response.fix_encoding(response_
RestClient::Response
response.body.inspect
response.inspect
response.headers.content
response.raw_headers
response.code
response.headers
response.body.headers
response.body.to_json
response.body
response.response
response
exit
response[result]
response.result
response
exit
response
exit
profile_text_params
@profile_text
ProfileText.find(params[:id])
params[:id]
exit
params
ProfileText.find(params.id)
